{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rushi\\\\Music\\\\Cave\\\\Lab\\\\Projects\\\\Horizon\\\\frontend\\\\src\\\\components\\\\ui\\\\ProgressBar.tsx\";\nimport React from 'react';\nimport { motion } from 'framer-motion';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProgressBar = ({\n  value,\n  max = 100,\n  className = '',\n  showLabel = true,\n  color = 'blue'\n}) => {\n  const percentage = Math.min(value / max * 100, 100);\n  const colorClasses = {\n    blue: 'from-blue-500 to-blue-600',\n    purple: 'from-purple-500 to-purple-600',\n    green: 'from-green-500 to-green-600',\n    pink: 'from-pink-500 to-pink-600'\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `w-full ${className}`,\n    children: [showLabel && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-between items-center mb-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text-sm text-white/70\",\n        children: \"Progress\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text-sm text-white/70\",\n        children: [Math.round(percentage), \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full bg-white/10 rounded-full h-2 overflow-hidden\",\n      children: /*#__PURE__*/_jsxDEV(motion.div, {\n        className: `h-full bg-gradient-to-r ${colorClasses[color]} rounded-full`,\n        initial: {\n          width: 0\n        },\n        animate: {\n          width: `${percentage}%`\n        },\n        transition: {\n          duration: 1,\n          ease: \"easeOut\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_c = ProgressBar;\nexport default ProgressBar;\nvar _c;\n$RefreshReg$(_c, \"ProgressBar\");","map":{"version":3,"names":["React","motion","jsxDEV","_jsxDEV","ProgressBar","value","max","className","showLabel","color","percentage","Math","min","colorClasses","blue","purple","green","pink","children","fileName","_jsxFileName","lineNumber","columnNumber","round","div","initial","width","animate","transition","duration","ease","_c","$RefreshReg$"],"sources":["C:/Users/rushi/Music/Cave/Lab/Projects/Horizon/frontend/src/components/ui/ProgressBar.tsx"],"sourcesContent":["import React from 'react';\r\nimport { motion } from 'framer-motion';\r\n\r\ninterface ProgressBarProps {\r\n  value: number;\r\n  max?: number;\r\n  className?: string;\r\n  showLabel?: boolean;\r\n  color?: 'blue' | 'purple' | 'green' | 'pink';\r\n}\r\n\r\nconst ProgressBar: React.FC<ProgressBarProps> = ({\r\n  value,\r\n  max = 100,\r\n  className = '',\r\n  showLabel = true,\r\n  color = 'blue',\r\n}) => {\r\n  const percentage = Math.min((value / max) * 100, 100);\r\n  \r\n  const colorClasses = {\r\n    blue: 'from-blue-500 to-blue-600',\r\n    purple: 'from-purple-500 to-purple-600',\r\n    green: 'from-green-500 to-green-600',\r\n    pink: 'from-pink-500 to-pink-600',\r\n  };\r\n\r\n  return (\r\n    <div className={`w-full ${className}`}>\r\n      {showLabel && (\r\n        <div className=\"flex justify-between items-center mb-2\">\r\n          <span className=\"text-sm text-white/70\">Progress</span>\r\n          <span className=\"text-sm text-white/70\">{Math.round(percentage)}%</span>\r\n        </div>\r\n      )}\r\n      \r\n      <div className=\"w-full bg-white/10 rounded-full h-2 overflow-hidden\">\r\n        <motion.div\r\n          className={`h-full bg-gradient-to-r ${colorClasses[color]} rounded-full`}\r\n          initial={{ width: 0 }}\r\n          animate={{ width: `${percentage}%` }}\r\n          transition={{ duration: 1, ease: \"easeOut\" }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProgressBar;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAUvC,MAAMC,WAAuC,GAAGA,CAAC;EAC/CC,KAAK;EACLC,GAAG,GAAG,GAAG;EACTC,SAAS,GAAG,EAAE;EACdC,SAAS,GAAG,IAAI;EAChBC,KAAK,GAAG;AACV,CAAC,KAAK;EACJ,MAAMC,UAAU,GAAGC,IAAI,CAACC,GAAG,CAAEP,KAAK,GAAGC,GAAG,GAAI,GAAG,EAAE,GAAG,CAAC;EAErD,MAAMO,YAAY,GAAG;IACnBC,IAAI,EAAE,2BAA2B;IACjCC,MAAM,EAAE,+BAA+B;IACvCC,KAAK,EAAE,6BAA6B;IACpCC,IAAI,EAAE;EACR,CAAC;EAED,oBACEd,OAAA;IAAKI,SAAS,EAAE,UAAUA,SAAS,EAAG;IAAAW,QAAA,GACnCV,SAAS,iBACRL,OAAA;MAAKI,SAAS,EAAC,wCAAwC;MAAAW,QAAA,gBACrDf,OAAA;QAAMI,SAAS,EAAC,uBAAuB;QAAAW,QAAA,EAAC;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eACvDnB,OAAA;QAAMI,SAAS,EAAC,uBAAuB;QAAAW,QAAA,GAAEP,IAAI,CAACY,KAAK,CAACb,UAAU,CAAC,EAAC,GAAC;MAAA;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrE,CACN,eAEDnB,OAAA;MAAKI,SAAS,EAAC,qDAAqD;MAAAW,QAAA,eAClEf,OAAA,CAACF,MAAM,CAACuB,GAAG;QACTjB,SAAS,EAAE,2BAA2BM,YAAY,CAACJ,KAAK,CAAC,eAAgB;QACzEgB,OAAO,EAAE;UAAEC,KAAK,EAAE;QAAE,CAAE;QACtBC,OAAO,EAAE;UAAED,KAAK,EAAE,GAAGhB,UAAU;QAAI,CAAE;QACrCkB,UAAU,EAAE;UAAEC,QAAQ,EAAE,CAAC;UAAEC,IAAI,EAAE;QAAU;MAAE;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9C;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACS,EAAA,GAnCI3B,WAAuC;AAqC7C,eAAeA,WAAW;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}